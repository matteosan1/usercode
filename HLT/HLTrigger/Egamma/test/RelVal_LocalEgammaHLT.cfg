process PRODEGAMMAHLT =  {
  #keep the logging output to a nice level
  #include "FWCore/MessageLogger/data/MessageLogger.cfi"

      service = MessageLogger
      {
       untracked vstring destinations = { "cout" }
       untracked PSet cout = { untracked string threshold = "WARNING" } 
       #untracked vstring debugModules =  {  "singleElectron"
       #                                   , "DoubleElectron"
       #                                   , "RelaxedDoubleElectron"
       #                                   , "SinglePhoton"
       #                                   , "DoublePhoton"
       #                                   , "RelaxedDoublePhoton"
       #                                  }
      }

  # Randomize the thing...
  service = RandomNumberGeneratorService
  {
      untracked uint32 sourceSeed = 98765
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 12345678
         untracked uint32 g4SimHits = 9876
         untracked uint32 mix = 12345
      }
  }

  # Z --> e+e- generation (no gamma* here)
  source = PythiaSource 
  { 
      untracked int32 maxEvents = 2
      untracked int32 pythiaPylistVerbosity = 0
      untracked bool pythiaHepMCVerbosity = false
      untracked int32 maxEventsToPrint = 0
      #untracked double comEnergy = 14000.

      PSet PythiaParameters = {

            # This is a vector of ParameterSet names to be read, in this order
            vstring parameterSets = {
                  "pythiaUESettings", 
                  "processParameters"
            }

            include "Configuration/Generator/data/PythiaUESettings.cfi"

            vstring processParameters = {
                  "MSEL=0                  !User defined processes",
                  "MSUB(1)=1               !Incl Z0/gamma* production",
                  "MSTP(43)=2              !Only Z0", 
                  "MDME(174,1)=0           !Z decay into d dbar",        
                  "MDME(175,1)=0           !Z decay into u ubar",
                  "MDME(176,1)=0           !Z decay into s sbar",
                  "MDME(177,1)=0           !Z decay into c cbar",
                  "MDME(178,1)=0           !Z decay into b bbar",
                  "MDME(179,1)=0           !Z decay into t tbar",
                  "MDME(182,1)=1           !Z decay into e- e+",
                  "MDME(183,1)=0           !Z decay into nu_e nu_ebar",
                  "MDME(184,1)=0           !Z decay into mu- mu+",
                  "MDME(185,1)=0           !Z decay into nu_mu nu_mubar",
                  "MDME(186,1)=0           !Z decay into tau- tau+",
                  "MDME(187,1)=0           !Z decay into nu_tau nu_taubar"
                 }
      }
  }


  # Simulation
  include "Configuration/StandardSequences/data/Simulation.cff"
  include "Configuration/StandardSequences/data/MixingNoPileUp.cff"
  include "Configuration/StandardSequences/data/VtxSmearedGauss.cff"
  #local reconstruction
 

  path p0 = {simulation} 

 include "HLTrigger/Configuration/data/common/HLTSetup.cff"
 include "HLTrigger/Egamma/data/EgammaHLTLocal.cff"

 include "HLTrigger/Egamma/data/SingleElectronL1Isolated.cff"
 include "HLTrigger/Egamma/data/DoubleElectronL1Isolated.cff"
 include "HLTrigger/Egamma/data/DoubleElectronL1NonIsolated.cff"
 include "HLTrigger/Egamma/data/SinglePhotonL1Isolated.cff"
 include "HLTrigger/Egamma/data/DoublePhotonL1Isolated.cff"
 include "HLTrigger/Egamma/data/DoublePhotonL1NonIsolated.cff"


 path pl1t = {doL1T}

 path SingleElectron = {singleElectronL1Isolated}
 path DoubleElectron = {doubleElectronL1Isolated}
 path SinglePhoton = {singlePhotonL1Isolated}
 path DoublePhoton = {doublePhotonL1Isolated}
 path RelaxedDoublePhoton = {doublePhotonL1NonIsolated}
 path RelaxedDoubleElectron = {doubleElectronL1NonIsolated}


include "Configuration/EventContent/data/EventContent.cff"
    module out = PoolOutputModule {
    untracked string fileName = "Zee.root"
    untracked vstring outputCommands = {
            #"keep *"
      # Starting point: drop everything
            "drop *"
	    
      # Keep all objects created by this process
            #"keep *_*_*_PRODEGAMMAHLT"
	}

    untracked PSet SelectEvents = { vstring SelectEvents = 
         {"SingleElectron","DoubleElectron","RelaxedDoubleElectron",
          "SinglePhoton","DoublePhoton","RelaxedDoublePhoton"
        }}
  }

  # HLTrigger/Timer configuration
  #include "HLTrigger/Timer/data/timer.cfi"
  #endpath outpath = {myTimer, out}

  #endpath outpath = {out}

  untracked PSet options = {
     untracked bool wantSummary = true  # default is false
     untracked bool makeTriggerResults = true 
     vstring listOfTriggers = {"SingleElectron","DoubleElectron","RelaxedDoubleElectron",
                               "SinglePhoton","DoublePhoton","RelaxedDoublePhoton"	
                              }
  }


}
