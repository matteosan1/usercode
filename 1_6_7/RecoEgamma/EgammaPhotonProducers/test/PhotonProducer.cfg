process Photon =
{
  # initialize  MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  # input module. assume root file contains EcalRecHits
  source = PoolSource
    {
	untracked vstring fileNames = {
	    '/store/unmerged/RelVal/2006/12/4/RelVal120pre9SingleEPt35/FEVT/0005/16C034A6-A783-DB11-A826-001731AF6787.root'
	}
    }

    # Number of events program should run
    untracked PSet maxEvents = {untracked int32 input = -1}

    include "RecoEcal/EgammaClusterProducers/data/ecalClusteringSequence.cff"
    include "RecoEgamma/EgammaElectronProducers/data/electronPixelSeeds.cfi"
    include "RecoEgamma/EgammaPhotonProducers/data/photonSequence.cff"

    path p1 = { ecalClusteringSequence, electronPixelSeeds, photonSequence }

    module o1 = PoolOutputModule
    {
	untracked string fileName = "photons.root"
	untracked vstring outputCommands = 
	{
	    "drop *",
	    "keep edmHepMCProduct_*_*_*",
	    "keep *_islandBasicClusters_*_*",
	    "keep *_islandSuperClusters_*_*",
	    "keep *_hybridSuperClusters_*_*",
	    "keep *_correctedIslandEndcapSuperClusters_*_*",
	    "keep *_correctedIslandBarrelSuperClusters_*_*",
	    "keep *_correctedHybridSuperClusters_*_*",
	    "keep *_correctedEndcapSuperClustersWithPreshower_*_*",
	    "keep *_piZeroDiscriminators_*_*",
	    "keep *_photons_*_*",
	    "keep *_correctedPhotons_*_*"
	}
    }
    endpath outpath = { o1 }
}
