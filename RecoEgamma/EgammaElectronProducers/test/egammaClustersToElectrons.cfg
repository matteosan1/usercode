# $Id: egammaClustersToElectrons.cfg,v 1.4 2007/05/17 18:44:56 futyand Exp $
# make electrons using pixel hits and ecal super clusters
# the input collection must contain
#   - rechits from tyracker
#   - clusters from ecal
# this implies that most likely you must have run on a reco sample yourself
# and stored the clusters in addition to the rechits.
# If you don't know how to do this consider using egammaRecHitsToElectrons.cfg instead.
#
#
process electrons = {

  ### keep the logging output to a nice level ###
  #include "FWCore/MessageLogger/data/MessageLogger.cfi"

  service = MessageLogger {
     untracked vstring destinations = {"cout"}
     untracked PSet cout = {
       untracked  PSet default = { untracked int32 limit = 0 }
       #untracked  string threshold = "Debug"
     }
  }

  source = PoolSource {
    untracked vstring fileNames =
    {'rfio:/castor/cern.ch/cms/store/unmerged/RelVal/2006/8/14/RelVal090SingleEPt35/GEN-SIM-DIGI-RECO/0006/2601BD05-812B-DB11-B907-0030485618DE.root'}
    untracked uint32 debugVerbosity = 1
    untracked bool   debugFlag     = true
  }

  untracked PSet maxEvents = {untracked int32 input = -1}

  # sequence to make electrons
  include "RecoEgamma/EgammaElectronProducers/data/electronSequence.cff"
  path p = { electronSequence }

  module out = PoolOutputModule {
    untracked string fileName = "egamma_electrons.root"
    untracked vstring outputCommands = {
       "drop *",
       "keep edmHepMCProduct_*_*_*",

       "keep recoBasicClusters_*_*_*",
       "keep recoSuperClusters_*_*_*",
       "keep recoPreshowerClusters_*_*_*",
       "keep recoClusterShapes_*_*_*",

       "keep *_electronPixelSeeds_*_*",
       "keep *_pixelMatchElectrons_*_*",
       "keep *_siStripElectrons_*_*",

       "keep *_egammaCTFWithMaterialTracks_*_*",
       "keep *_siStripElectronToTrackAssociator_*_*"
    }
  }
  endpath outpath = { out }
}
