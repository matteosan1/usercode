process pr = 
{
    include "FWCore/MessageLogger/data/MessageLogger.cfi"
    
    service = RandomNumberGeneratorService {
	untracked uint32 sourceSeed = 3629506
	PSet moduleSeeds = {
	    untracked uint32 VtxSmeared = 578293496012
	}
    }
    
    # for PDTRecord
    include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
    
    # generate electron gun events
    source = FlatRandomEGunSource {
	untracked PSet PGunParameters = {
	    untracked vint32 PartID = {-11}
	    untracked double MinEta = -0.01
	    untracked double MaxEta = 0.01
	    untracked double MinPhi = -3.14159265358979323846 # in radians
	    untracked double MaxPhi =  3.14159265358979323846
	    untracked double MinE  =  49.99
	    untracked double MaxE  =  50.01
	}
	untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
    }
    
    untracked PSet maxEvents = {untracked int32 input = 10}

    # vertex smearer
    include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"
    
    # Geant4 simulation
    include "SimG4Core/Application/data/SimG4Object.cfi"
    
    # mixing module
    module mix = MixingModule {
	int32 bunchspace = 25
    }
    
    ################################################ Event/EventSetup for tracker hits
    
    # tracker geometry
    include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
    
    # tracker numbering
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    
    # standard geometry
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    
    # magnetic field
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
    
    # make SiStrip rechits
    include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"
    include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer.cfi"
    include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
    include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"
    include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"
    
    # make SiPixel rechits
    include "SimTracker/SiPixelDigitizer/data/PixelDigi.cfi"
    include "RecoLocalTracker/SiPixelClusterizer/data/SiPixelClusterizer.cfi"
    include "RecoLocalTracker/SiPixelRecHits/data/PixelCPEParmError.cfi"
    include "RecoLocalTracker/SiPixelRecHits/data/SiPixelRecHits.cfi"
    
    ################################################ Make the ECAL hits and SuperClusters
    
    # Everything for the hybrid method
    include "Geometry/CaloEventSetup/data/CaloGeometry.cff"
    include "CalibCalorimetry/EcalTrivialCondModules/data/EcalTrivialCondRetriever.cfi"
    include "RecoLocalCalo/EcalRecProducers/data/ecalWeightUncalibRecHit.cfi"
    include "RecoLocalCalo/EcalRecProducers/data/ecalRecHit.cfi"
    include "RecoEcal/EgammaClusterProducers/data/hybridClusteringSequence.cff"
    
    ################################################ Find the electrons
    
    # Find the electrons, do tracking and match fitted tracks with the electrons
    # input is SuperCluster and SiStrip hits, output is
    # SiStripElectrons (contains diagnostic information) and Electrons
    # (high-level user object: contains Track and SuperCluster)
    include "RecoEgamma/EgammaElectronProducers/data/findElectronsInSiStrips.cfi"
    
    #  # Print out objects, to be sure we made them
    #  module eventcontent = EventContentAnalyzer {}
    
    # No output
    #  module out = PoolOutputModule
    #  {
    #     untracked string fileName = "eventdata.root"
    #     untracked vstring outputCommands = 
    #      {  
    #         "drop *",
    #         "keep *_*_islandBarrelSuperClusterCollection_*", 
    #         "keep *_*_correctedSuperclusterCollection_*", 
    #         "keep *_*_rphiRecHit_*", 
    #         "keep *_*_stereoRecHit_*", 
    #         "keep *_findElectronsInSiStrips_*_*", 
    #         "keep *_CTFWMaterial_*_*", 
    #         "keep *_VtxSmeared_*_*", 
    #         "keep *_source_*_*"
    #       }
    #  }
    
    path p = 
    {
	VtxSmeared,
	g4SimHits,
	mix,
	
	siStripDigis,
	siStripClusters,
	siStripMatchedRecHits,
	siPixelDigis,
	siPixelClusters,
	siPixelRecHits,
	
	ecalWeightUncalibRecHit,
	ecalRecHit,
	hybridClusteringSequence,
	
	findElectronsInSiStrips
	# eventcontent
    }
    
    #  endpath e = {out}
}
