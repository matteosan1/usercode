process createseeds = {

#service = MessageLogger
#{
#   untracked vstring destinations = {"cout"}
#   untracked PSet cout = 
#   {
#     untracked  PSet default = { int32 limit = 0 }
#     string threshold = "Error"   
#   }
#}


source = PoolSource 
{ 

         untracked vstring fileNames = {'file:/tmp/uberthon/evtgen_detsim_digi_rechits_clus_sclus_esinglePt30.root'}
          untracked uint32 debugVerbosity = 1
          untracked bool   debugFlag     = true
}

untracked PSet maxEvents = {untracked int32 input = 2}

#include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"
############ initialize magnetic field #########################
include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

############### initialize geometry #####################
include "Geometry/TrackerRecoData/data/trackerRecoGeometryXML.cfi"
include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"
   

       
        module out = PoolOutputModule { untracked string fileName =
	"/tmp/test.root"}

        endpath outpath = { out }
        
	include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer.cfi"
        include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"
        include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
 
       module elseed= ElectronPixelSeedProducer {
        	double ePhiMin1=-0.125
        	double ePhiMax1=0.075
		double pPhiMin1=-0.075
		double pPhiMax1=0.125
		double pPhiMin2=-0.005
		double pPhiMax2=0.005
		double ZMin1=-15.0
		double ZMax1=15.0
		double ZMin2=-0.07
		double ZMax2=0.07
                double NSigmaInside = 3. # waiting for fix
	        string superClusterLabel = "correctedHybridSuperClusterCollection"
	        string superClusterProducer = "correctedHybridSuperClusterProducer"
# nested parameter set for MeasurementTracker
      PSet MeasurementTrackerParameters =
      {
         string PixelCPE = "PixelCPEfromTrackAngle"
         string StripCPE = "StripCPEfromTrackAngle"
         double NSigmaInside =3
      }	
        }


       path p = {siStripClusters,siStripRecHits,elseed}
#       path p = {elseed}

}
